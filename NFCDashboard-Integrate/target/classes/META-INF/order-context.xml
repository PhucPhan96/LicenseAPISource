<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/integration"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:stream="http://www.springframework.org/schema/integration/stream"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                                 http://www.springframework.org/schema/beans/spring-beans.xsd
                                 http://www.springframework.org/schema/context
                                 http://www.springframework.org/schema/context/spring-context.xsd
                                 http://www.springframework.org/schema/integration
                                 http://www.springframework.org/schema/integration/spring-integration-3.0.xsd
                                 http://www.springframework.org/schema/integration/stream
                                 http://www.springframework.org/schema/integration/stream/spring-integration-stream-3.0.xsd">
    <annotation-config/>

    <context:component-scan base-package="org.springbyexample.integration.book.annotation"/>

    <gateway id="order" service-interface="nfc.order.Order"/>
    <channel id="orders"/>
    <splitter input-channel="orders" method="split" output-channel="orderAnaly">
		<beans:bean class="nfc.order.endpoint.OrderSplitter"/>
	</splitter>
    <channel id="orderAnaly"/>
    <router input-channel="orderAnaly"  method="resolveOrderItemChannel">
		<beans:bean class="nfc.order.endpoint.OrderRouter"/>
	</router>
	
	<channel id="delivery">
		<queue capacity="100"/>
	</channel>
	
	<channel id="goodFood">
		<queue capacity="100"/>
	</channel>
    
    
</beans:beans>